ARM GAS  /tmp/ccBbckLb.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"adc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_ADC2_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_ADC2_Init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_ADC2_Init:
  24              	.LFB65:
  25              		.file 1 "Core/Src/adc.c"
   1:Core/Src/adc.c **** /**
   2:Core/Src/adc.c ****   ******************************************************************************
   3:Core/Src/adc.c ****   * File Name          : ADC.c
   4:Core/Src/adc.c ****   * Description        : This file provides code for the configuration
   5:Core/Src/adc.c ****   *                      of the ADC instances.
   6:Core/Src/adc.c ****   ******************************************************************************
   7:Core/Src/adc.c ****   * @attention
   8:Core/Src/adc.c ****   *
   9:Core/Src/adc.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/adc.c ****   * All rights reserved.</center></h2>
  11:Core/Src/adc.c ****   *
  12:Core/Src/adc.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/adc.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/adc.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/adc.c ****   *                             www.st.com/SLA0044
  16:Core/Src/adc.c ****   *
  17:Core/Src/adc.c ****   ******************************************************************************
  18:Core/Src/adc.c ****   */
  19:Core/Src/adc.c **** 
  20:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/adc.c **** #include "adc.h"
  22:Core/Src/adc.c **** 
  23:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/adc.c **** 
  25:Core/Src/adc.c **** /* USER CODE END 0 */
  26:Core/Src/adc.c **** 
  27:Core/Src/adc.c **** ADC_HandleTypeDef hadc2;
  28:Core/Src/adc.c **** 
  29:Core/Src/adc.c **** /* ADC2 init function */
  30:Core/Src/adc.c **** void MX_ADC2_Init(void)
  31:Core/Src/adc.c **** {
  26              		.loc 1 31 0
  27              		.cfi_startproc
ARM GAS  /tmp/ccBbckLb.s 			page 2


  28              		@ args = 0, pretend = 0, frame = 16
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 00B5     		push	{lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 14, -4
  34 0002 85B0     		sub	sp, sp, #20
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 24
  32:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  37              		.loc 1 32 0
  38 0004 0023     		movs	r3, #0
  39 0006 0193     		str	r3, [sp, #4]
  40 0008 0293     		str	r3, [sp, #8]
  41 000a 0393     		str	r3, [sp, #12]
  33:Core/Src/adc.c **** 
  34:Core/Src/adc.c ****   /** Common config 
  35:Core/Src/adc.c ****   */
  36:Core/Src/adc.c ****   hadc2.Instance = ADC2;
  42              		.loc 1 36 0
  43 000c 1048     		ldr	r0, .L7
  44 000e 114A     		ldr	r2, .L7+4
  45 0010 0260     		str	r2, [r0]
  37:Core/Src/adc.c ****   hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
  46              		.loc 1 37 0
  47 0012 8360     		str	r3, [r0, #8]
  38:Core/Src/adc.c ****   hadc2.Init.ContinuousConvMode = ENABLE;
  48              		.loc 1 38 0
  49 0014 0122     		movs	r2, #1
  50 0016 0273     		strb	r2, [r0, #12]
  39:Core/Src/adc.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
  51              		.loc 1 39 0
  52 0018 0375     		strb	r3, [r0, #20]
  40:Core/Src/adc.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  53              		.loc 1 40 0
  54 001a 4FF46021 		mov	r1, #917504
  55 001e C161     		str	r1, [r0, #28]
  41:Core/Src/adc.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  56              		.loc 1 41 0
  57 0020 4360     		str	r3, [r0, #4]
  42:Core/Src/adc.c ****   hadc2.Init.NbrOfConversion = 1;
  58              		.loc 1 42 0
  59 0022 0261     		str	r2, [r0, #16]
  43:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
  60              		.loc 1 43 0
  61 0024 FFF7FEFF 		bl	HAL_ADC_Init
  62              	.LVL0:
  63 0028 60B9     		cbnz	r0, .L5
  64              	.L2:
  44:Core/Src/adc.c ****   {
  45:Core/Src/adc.c ****     Error_Handler();
  46:Core/Src/adc.c ****   }
  47:Core/Src/adc.c ****   /** Configure Regular Channel 
  48:Core/Src/adc.c ****   */
  49:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_0;
  65              		.loc 1 49 0
  66 002a 0023     		movs	r3, #0
ARM GAS  /tmp/ccBbckLb.s 			page 3


  67 002c 0193     		str	r3, [sp, #4]
  50:Core/Src/adc.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
  68              		.loc 1 50 0
  69 002e 0122     		movs	r2, #1
  70 0030 0292     		str	r2, [sp, #8]
  51:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
  71              		.loc 1 51 0
  72 0032 0393     		str	r3, [sp, #12]
  52:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
  73              		.loc 1 52 0
  74 0034 01A9     		add	r1, sp, #4
  75 0036 0648     		ldr	r0, .L7
  76 0038 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  77              	.LVL1:
  78 003c 28B9     		cbnz	r0, .L6
  79              	.L1:
  53:Core/Src/adc.c ****   {
  54:Core/Src/adc.c ****     Error_Handler();
  55:Core/Src/adc.c ****   }
  56:Core/Src/adc.c **** 
  57:Core/Src/adc.c **** }
  80              		.loc 1 57 0
  81 003e 05B0     		add	sp, sp, #20
  82              	.LCFI2:
  83              		.cfi_remember_state
  84              		.cfi_def_cfa_offset 4
  85              		@ sp needed
  86 0040 5DF804FB 		ldr	pc, [sp], #4
  87              	.L5:
  88              	.LCFI3:
  89              		.cfi_restore_state
  45:Core/Src/adc.c ****   }
  90              		.loc 1 45 0
  91 0044 FFF7FEFF 		bl	Error_Handler
  92              	.LVL2:
  93 0048 EFE7     		b	.L2
  94              	.L6:
  54:Core/Src/adc.c ****   }
  95              		.loc 1 54 0
  96 004a FFF7FEFF 		bl	Error_Handler
  97              	.LVL3:
  98              		.loc 1 57 0
  99 004e F6E7     		b	.L1
 100              	.L8:
 101              		.align	2
 102              	.L7:
 103 0050 00000000 		.word	hadc2
 104 0054 00280140 		.word	1073817600
 105              		.cfi_endproc
 106              	.LFE65:
 108              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 109              		.align	1
 110              		.global	HAL_ADC_MspInit
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu softvfp
ARM GAS  /tmp/ccBbckLb.s 			page 4


 116              	HAL_ADC_MspInit:
 117              	.LFB66:
  58:Core/Src/adc.c **** 
  59:Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  60:Core/Src/adc.c **** {
 118              		.loc 1 60 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 24
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              	.LVL4:
 123 0000 00B5     		push	{lr}
 124              	.LCFI4:
 125              		.cfi_def_cfa_offset 4
 126              		.cfi_offset 14, -4
 127 0002 87B0     		sub	sp, sp, #28
 128              	.LCFI5:
 129              		.cfi_def_cfa_offset 32
  61:Core/Src/adc.c **** 
  62:Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 130              		.loc 1 62 0
 131 0004 0023     		movs	r3, #0
 132 0006 0293     		str	r3, [sp, #8]
 133 0008 0393     		str	r3, [sp, #12]
 134 000a 0493     		str	r3, [sp, #16]
 135 000c 0593     		str	r3, [sp, #20]
  63:Core/Src/adc.c ****   if(adcHandle->Instance==ADC2)
 136              		.loc 1 63 0
 137 000e 0268     		ldr	r2, [r0]
 138 0010 114B     		ldr	r3, .L13
 139 0012 9A42     		cmp	r2, r3
 140 0014 02D0     		beq	.L12
 141              	.LVL5:
 142              	.L9:
  64:Core/Src/adc.c ****   {
  65:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_MspInit 0 */
  66:Core/Src/adc.c **** 
  67:Core/Src/adc.c ****   /* USER CODE END ADC2_MspInit 0 */
  68:Core/Src/adc.c ****     /* ADC2 clock enable */
  69:Core/Src/adc.c ****     __HAL_RCC_ADC2_CLK_ENABLE();
  70:Core/Src/adc.c ****   
  71:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  72:Core/Src/adc.c ****     /**ADC2 GPIO Configuration    
  73:Core/Src/adc.c ****     PA0-WKUP     ------> ADC2_IN0 
  74:Core/Src/adc.c ****     */
  75:Core/Src/adc.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
  76:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
  77:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  78:Core/Src/adc.c **** 
  79:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_MspInit 1 */
  80:Core/Src/adc.c **** 
  81:Core/Src/adc.c ****   /* USER CODE END ADC2_MspInit 1 */
  82:Core/Src/adc.c ****   }
  83:Core/Src/adc.c **** }
 143              		.loc 1 83 0
 144 0016 07B0     		add	sp, sp, #28
 145              	.LCFI6:
 146              		.cfi_remember_state
ARM GAS  /tmp/ccBbckLb.s 			page 5


 147              		.cfi_def_cfa_offset 4
 148              		@ sp needed
 149 0018 5DF804FB 		ldr	pc, [sp], #4
 150              	.LVL6:
 151              	.L12:
 152              	.LCFI7:
 153              		.cfi_restore_state
 154              	.LBB2:
  69:Core/Src/adc.c ****   
 155              		.loc 1 69 0
 156 001c 03F56843 		add	r3, r3, #59392
 157 0020 9A69     		ldr	r2, [r3, #24]
 158 0022 42F48062 		orr	r2, r2, #1024
 159 0026 9A61     		str	r2, [r3, #24]
 160 0028 9A69     		ldr	r2, [r3, #24]
 161 002a 02F48062 		and	r2, r2, #1024
 162 002e 0092     		str	r2, [sp]
 163 0030 009A     		ldr	r2, [sp]
 164              	.LBE2:
 165              	.LBB3:
  71:Core/Src/adc.c ****     /**ADC2 GPIO Configuration    
 166              		.loc 1 71 0
 167 0032 9A69     		ldr	r2, [r3, #24]
 168 0034 42F00402 		orr	r2, r2, #4
 169 0038 9A61     		str	r2, [r3, #24]
 170 003a 9B69     		ldr	r3, [r3, #24]
 171 003c 03F00403 		and	r3, r3, #4
 172 0040 0193     		str	r3, [sp, #4]
 173 0042 019B     		ldr	r3, [sp, #4]
 174              	.LBE3:
  75:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 175              		.loc 1 75 0
 176 0044 0123     		movs	r3, #1
 177 0046 0293     		str	r3, [sp, #8]
  76:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 178              		.loc 1 76 0
 179 0048 0323     		movs	r3, #3
 180 004a 0393     		str	r3, [sp, #12]
  77:Core/Src/adc.c **** 
 181              		.loc 1 77 0
 182 004c 02A9     		add	r1, sp, #8
 183 004e 0348     		ldr	r0, .L13+4
 184              	.LVL7:
 185 0050 FFF7FEFF 		bl	HAL_GPIO_Init
 186              	.LVL8:
 187              		.loc 1 83 0
 188 0054 DFE7     		b	.L9
 189              	.L14:
 190 0056 00BF     		.align	2
 191              	.L13:
 192 0058 00280140 		.word	1073817600
 193 005c 00080140 		.word	1073809408
 194              		.cfi_endproc
 195              	.LFE66:
 197              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 198              		.align	1
 199              		.global	HAL_ADC_MspDeInit
ARM GAS  /tmp/ccBbckLb.s 			page 6


 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 203              		.fpu softvfp
 205              	HAL_ADC_MspDeInit:
 206              	.LFB67:
  84:Core/Src/adc.c **** 
  85:Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
  86:Core/Src/adc.c **** {
 207              		.loc 1 86 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              	.LVL9:
 212 0000 08B5     		push	{r3, lr}
 213              	.LCFI8:
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 3, -8
 216              		.cfi_offset 14, -4
  87:Core/Src/adc.c **** 
  88:Core/Src/adc.c ****   if(adcHandle->Instance==ADC2)
 217              		.loc 1 88 0
 218 0002 0268     		ldr	r2, [r0]
 219 0004 064B     		ldr	r3, .L19
 220 0006 9A42     		cmp	r2, r3
 221 0008 00D0     		beq	.L18
 222              	.LVL10:
 223              	.L15:
 224 000a 08BD     		pop	{r3, pc}
 225              	.LVL11:
 226              	.L18:
  89:Core/Src/adc.c ****   {
  90:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_MspDeInit 0 */
  91:Core/Src/adc.c **** 
  92:Core/Src/adc.c ****   /* USER CODE END ADC2_MspDeInit 0 */
  93:Core/Src/adc.c ****     /* Peripheral clock disable */
  94:Core/Src/adc.c ****     __HAL_RCC_ADC2_CLK_DISABLE();
 227              		.loc 1 94 0
 228 000c 054A     		ldr	r2, .L19+4
 229 000e 9369     		ldr	r3, [r2, #24]
 230 0010 23F48063 		bic	r3, r3, #1024
 231 0014 9361     		str	r3, [r2, #24]
  95:Core/Src/adc.c ****   
  96:Core/Src/adc.c ****     /**ADC2 GPIO Configuration    
  97:Core/Src/adc.c ****     PA0-WKUP     ------> ADC2_IN0 
  98:Core/Src/adc.c ****     */
  99:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0);
 232              		.loc 1 99 0
 233 0016 0121     		movs	r1, #1
 234 0018 0348     		ldr	r0, .L19+8
 235              	.LVL12:
 236 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 237              	.LVL13:
 100:Core/Src/adc.c **** 
 101:Core/Src/adc.c ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
 102:Core/Src/adc.c **** 
 103:Core/Src/adc.c ****   /* USER CODE END ADC2_MspDeInit 1 */
ARM GAS  /tmp/ccBbckLb.s 			page 7


 104:Core/Src/adc.c ****   }
 105:Core/Src/adc.c **** } 
 238              		.loc 1 105 0
 239 001e F4E7     		b	.L15
 240              	.L20:
 241              		.align	2
 242              	.L19:
 243 0020 00280140 		.word	1073817600
 244 0024 00100240 		.word	1073876992
 245 0028 00080140 		.word	1073809408
 246              		.cfi_endproc
 247              	.LFE67:
 249              		.comm	hadc2,48,4
 250              		.text
 251              	.Letext0:
 252              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 253              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 254              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 255              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 256              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 257              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 258              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 259              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 260              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 261              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 262              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 263              		.file 13 "Core/Inc/adc.h"
 264              		.file 14 "Core/Inc/main.h"
ARM GAS  /tmp/ccBbckLb.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/ccBbckLb.s:16     .text.MX_ADC2_Init:0000000000000000 $t
     /tmp/ccBbckLb.s:23     .text.MX_ADC2_Init:0000000000000000 MX_ADC2_Init
     /tmp/ccBbckLb.s:103    .text.MX_ADC2_Init:0000000000000050 $d
                            *COM*:0000000000000030 hadc2
     /tmp/ccBbckLb.s:109    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccBbckLb.s:116    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccBbckLb.s:192    .text.HAL_ADC_MspInit:0000000000000058 $d
     /tmp/ccBbckLb.s:198    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccBbckLb.s:205    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccBbckLb.s:243    .text.HAL_ADC_MspDeInit:0000000000000020 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
